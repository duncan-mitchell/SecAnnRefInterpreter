{let (%context = %nonstrictContext)
     {let (#strict = false)
          {SecAnn <!A!>;
           {let (%fun2 = {let (%prototype5 = {[#proto: %ObjectProto,
                                               #class: "Object",
                                               #extensible: true,]
                                              'constructor' : {#value (undefined) ,
                                                               #writable true ,
                                                               #configurable false}})
                              {let (%parent = %context)
                                   {let (%thisfunc6 = {[#proto: %FunctionProto,
                                                        #code: func(%this , %args)
                                                               {%args
                                                                  [delete "%new"];
                                                                label %ret :
                                                                {{let (%this = %resolveThis
                                                                    (#strict,
                                                                    %this))
                                                                    {let (%context = {let (%x4 = %args
                                                                    ["0" , null])
                                                                    {[#proto: %parent,
                                                                    #class: "Object",
                                                                    #extensible: true,]
                                                                    'arguments' : {#value (%args) ,
                                                                    #writable true ,
                                                                    #configurable false},
                                                                    'x' : {#getter func
                                                                    (this , args)
                                                                    {label %ret :
                                                                    {break %ret %x4}} ,
                                                                    #setter func
                                                                    (this , args)
                                                                    {label %ret :
                                                                    {break %ret %x4 := args
                                                                    ["0" , {[#proto: %ArrayProto,
                                                                    #class: "Array",
                                                                    #extensible: true,]}]}}}}})
                                                                    {break %ret %context
                                                                    ["x" , {[#proto: null,
                                                                    #class: "Object",
                                                                    #extensible: true,]}];
                                                                    undefined}}}}},
                                                        #class: "Function",
                                                        #extensible: true,]
                                                       'prototype' : {#value (%prototype5) ,
                                                                    #writable true ,
                                                                    #configurable true},
                                                       'length' : {#value (1.) ,
                                                                   #writable true ,
                                                                   #configurable true},
                                                       'caller' : {#getter %ThrowTypeError ,
                                                                   #setter %ThrowTypeError},
                                                       'arguments' : {#getter %ThrowTypeError ,
                                                                    #setter %ThrowTypeError}})
                                        {%prototype5["constructor" = %thisfunc6 ,
                                                     null];
                                         %thisfunc6}}}})
                {let (%ftype3 = prim("typeof", %fun2))
                     if (prim("!", prim("stx=", %ftype3 , "function")))
                        {%TypeError("Not a function")}
                        else
                        {%fun2(undefined,
                               %mkArgsObj({[#proto: null,
                                            #class: "Object",
                                            #extensible: true,]
                                           '0' : {#value (true as <!A!>) ,
                                                  #writable true ,
                                                  #configurable true}}))}}}}}}
