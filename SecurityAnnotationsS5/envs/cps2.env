rec [%getField] = func (obj, field, args) {
    if (prim("stx=", obj, null)) {
        undefined
    } else {
        if (prim("hasOwnProperty", obj, field)) {
            if (prim("isAccessor", obj, field)) {
                obj[field<#getter>](args)
            } else {
                obj[field<#value>]
            }
        } else {
            %getField(prim("get-proto", obj), field, args)
        }
    }
}

rec [%updateField] = func (obj1, obj2, field, value, args) {
    if (prim("stx=", obj1, null)) {
        obj2[field<#writable> = true];
        obj2[field<#value> = value];
        value
    } else {
        if (prim("hasOwnProperty", obj1, field)) {
            if (prim("isAccessor", obj1, field)) {
                obj1[field<#setter>](args)
            } else {
                if (obj1[field<#writable>]) {
                    if (prim("stx=", obj1, obj2)) {
                        obj2[field<#writable> = true];
                        obj2[field<#value> = value];
                        value
                    } else {
                        obj1[field<#value> = value];
                        obj1[field<#writable> = true];
                        value
                    }
                } else {
                    throw prim("string+", "Field not writable: ", field)
                }
            }
        } else {
            %updateField(prim("get-proto", obj1), obj2, field, value, args)
        }
    }
}
